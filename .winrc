let g:skip_loading_mswin = 1
function! <SID>SetShell()
  let &shell='"' . g:msys . '\usr\bin\bash.exe"'
  set shellcmdflag=-c
  set shellslash
  set shellquote=
  set shellxquote=
  set shellxescape=
endfunction

autocmd VimEnter * call <SID>SetShell()

au BufRead,BufNewFile .winrc set filetype=vim
set runtimepath-=~/vimfiles
set runtimepath-=$VIM/vimfiles
set runtimepath-=~/vimfiles/after
set runtimepath-=$VIM/vimfiles/after

exec 'source ' . g:dotvim . '.vimrc'

set nofixeol noeol
let g:clipboard = {
\ 'name': 'win32yank',
\ 'copy': { '+': 'win32yank.exe -i --crlf', '*': 'win32yank.exe -i --crlf' },
\ 'paste': { '+': 'win32yank.exe -o --lf', '*': 'win32yank.exe -o --lf' },
\ 'cache_enabled': 0
\ }

let $TEMP = expand($TEMP)
let $TMP = $TEMP
exec 'set directory=' . $TEMP . ' backupdir=' . $TEMP . ' undodir=' . $TEMP
let g:session_directory = $VIM . '\sessions\'
let g:session_persist_globals = ['&tabstop', '&softtabstop', '&shiftwidth', '&expandtab']
au BufNewFile,BufRead *.apm set filetype=perl
au BufNewFile,BufRead *.opx set filetype=perl
au BufNewFile,BufRead *.ops set filetype=perl
au BufNewFile,BufRead *.ocs set filetype=cs
au BufNewFile,BufRead * set noeol
command! Ewinrc execute 'e ' . g:dotvim . '.winrc'
command! Svimrc execute 'so ' . g:dotvim . '.winrc'
command! IncFont let &guifont = substitute(&guifont, ':h\zs\d\+', '\=eval(submatch(0)+1)', 'g')
command! DecFont let &guifont = substitute(&guifont, ':h\zs\d\+', '\=eval(submatch(0)-1)', 'g')

cd C:\

ino <F13> a

function! DoInDir(fn,...)
  let l:ech = get(a:,1,0)
  let l:bak = getcwd()
  :cd %:p:h
  execute a:fn
  echo l:ech
  if l:ech
    echo l:ech
    echo l:ech . ': ' . expand('%')
  endif
  execute 'cd ' . l:bak
endfunction

command! CMD call DoInDir('silent! !start cmd')
command! P4c call DoInDir('Vp4Edit', 'Checked Out')
command! P4r call DoInDir('Vp4Revert', 'Reverted')

command! Split execute '!start gvim "%"' | bd
command! Duplicate execute '!start gvim "%"'
command! Console execute '!start "C:\Programs\cmder\Cmder.exe" /START ' . expand('%:p:h')